{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","index.js"],"names":["NewTodoForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","task","handleChange","bind","assertThisInitialized","handleSubmit","evt","setState","defineProperty","target","name","value","preventDefault","createTodo","objectSpread","id","uuid","completed","react_default","a","createElement","className","onSubmit","htmlFor","type","placeholder","onChange","Component","Todo","isEditing","handleRemove","toggleForm","handleUpdate","handleToggle","removeTodo","updateTodo","toggleTodo","result","CSSTransition","key","timeout","classNames","onClick","TransitionGroup","TodoList","todos","create","remove","update","toggleCompletion","newTodo","concat","toConsumableArray","filter","t","updatedTask","updatedTodos","map","todo","_this2","src_Todo_0","NewTodoForm_NewTodoForm","App","TodoList_TodoList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b737ff02.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport uuid from \"uuid/v1\";\r\nimport \"./NewTodoForm.css\";\r\n\r\nexport default class NewTodoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task: \"\"};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    })\r\n  }\r\n  handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    this.props.createTodo({...this.state, id: uuid(), completed: false})\r\n    this.setState({task: \"\"})\r\n  }\r\n  render() {\r\n    return (\r\n        <form className='NewTodoForm' onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"task\">New Todo</label>\r\n          <input\r\n           type=\"text\"\r\n           placeholder='New Todo'\r\n           id='task'\r\n           name=\"task\"\r\n           value={this.state.task}\r\n           onChange={this.handleChange}\r\n          />\r\n          <button>Add Todo </button>\r\n        </form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      task: this.props.task\r\n    };\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.toggleForm = this.toggleForm.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n  handleRemove() {\r\n    this.props.removeTodo(this.props.id);\r\n  }\r\n  toggleForm() {\r\n    this.setState({ isEditing: !this.state.isEditing });\r\n  }\r\n  handleUpdate(evt) {\r\n    evt.preventDefault();\r\n    //take new task data and pass up to parent\r\n    this.props.updateTodo(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  }\r\n  handleChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n  handleToggle(evt) {\r\n    this.props.toggleTodo(this.props.id);\r\n  }\r\n  render() {\r\n    let result;\r\n    if (this.state.isEditing) {\r\n      result = (\r\n        <CSSTransition key='editing' timeout={500} classNames='form'>\r\n          <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\r\n            <input\r\n              type='text'\r\n              value={this.state.task}\r\n              name='task'\r\n              onChange={this.handleChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n        </CSSTransition>\r\n      );\r\n    } else {\r\n      result = (\r\n        <CSSTransition key='normal' timeout={500} classNames='task-text'>\r\n          <li className='Todo-task' onClick={this.handleToggle}>\r\n            {this.props.task}\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <TransitionGroup\r\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\r\n      >\r\n        {result}\r\n        <div className='Todo-buttons'>\r\n          <button onClick={this.toggleForm}>\r\n            <i className='fas fa-pen' />\r\n          </button>\r\n          <button onClick={this.handleRemove}>\r\n            <i className='fas fa-trash' />\r\n          </button>\r\n        </div>\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\nexport default Todo;\r\n","import React, { Component } from 'react'\r\nimport NewTodoForm from \"./NewTodoForm\"\r\nimport Todo from \"./Todo\";\r\nimport \"./TodoList.css\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nexport default class TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos : []\r\n    };\r\n    this.create = this.create.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.toggleCompletion = this.toggleCompletion.bind(this);\r\n  }\r\n  create(newTodo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, newTodo]\r\n    });\r\n  }\r\n  remove(id) {\r\n    this.setState ({\r\n      todos : this.state.todos.filter( t => t.id !== id)\r\n    })\r\n  }\r\n  update(id, updatedTask) {\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, task: updatedTask }\r\n      }\r\n      return todo;\r\n    })\r\n    this.setState({ todos: updatedTodos })\r\n  }\r\n\r\n  toggleCompletion(id) {\r\n    const updatedTodos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        return { ...todo, completed: !todo.completed }\r\n      }\r\n      return todo;\r\n    })\r\n    this.setState({ todos: updatedTodos })\r\n  }\r\n  render() {\r\n    const todos = this.state.todos.map(todo => {\r\n      return (\r\n        <CSSTransition key={todo.id} timeout={500} classNames='todo'>\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            task={todo.task}\r\n            completed={todo.completed}\r\n            removeTodo={this.remove}\r\n            updateTodo={this.update}\r\n            toggleTodo={this.toggleCompletion}\r\n          />\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <div className='TodoList'>\r\n        <h1>Todo List! <span>A Simple React App.</span></h1>\r\n        <NewTodoForm createTodo={this.create} />\r\n\r\n        <ul>\r\n          <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport TodoList from \"./TodoList\";\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TodoList />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}